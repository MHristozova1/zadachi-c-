#include <iostream>
#include <string>

using namespace std;

class Animal
{
protected:
	string name,poroda;
	double price;
public:
	Animal(string name,string poroda, double price)
	{ 
		this->name = name;
		this->poroda = poroda;
		this->price = price;
	}

	double getPrice()
	{ 
		return price;
	}

	virtual void info()=0;
};

class Cat:public Animal
{
public:
	Cat(string name,string poroda, double price):Animal(name, poroda, price) // Извикване  на родителския конструктор
	{ 
	}

	void info()
	{ 
		cout << "Kotka " << name << "poroda"<<poroda<< ", cena " << price << " lv." << endl;
	}
};

class Dog:public Animal
{
private:
	double weight;
public:
	Dog(string name,string poroda, double price):Animal(name, poroda, price)
	{ 
	}

	void info()
	{ 
		cout << "Kuche " << name<< "poroda"<<poroda<< ", cena " << price << " lv." << endl;
	}
};

void Info (Animal *a)
{
		a->info();
}
void maxPrice(Animal *a1, Animal *a2)
{
	cout << "Jivotno s max cena: "; 
	if(a1->getPrice()>a2->getPrice())
		a1->info();
	else
		a2->info();
}


void Info2(Animal *a[],int n)
{
	int i;
for (i=0;i<n;i++) a[i]->info ();
}
void main()
{
	Animal* anim [5];
	anim[0]=new Cat("Mima", "seamska",22.50);
	anim[1]=new Dog ("Reks", "doberman",40);

	Info2(anim,2);

	for (int i=0;i<2;i++) Info(anim[i]);
	for (int i=0;i<2;i++)delete (anim [i]);



  system ("PAUSE");
}
